apiVersion: v1
kind: ConfigMap
metadata:
  name: mlflow-config
  namespace: mlflow
data:
  BACKEND_STORE_URI: "file:///mlflow-db/mlflow.db"
  DEFAULT_ARTIFACT_ROOT: "s3://${DO_SPACES_NAME}/mlflow-artifacts"
  MLFLOW_S3_ENDPOINT_URL: "https://${DO_SPACES_REGION}.digitaloceanspaces.com"
  AWS_REGION: "${DO_SPACES_REGION}"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-database
  namespace: mlflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: do-block-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  namespace: mlflow
  labels:
    app: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      initContainers:
      - name: init-db-dir
        image: busybox
        command: ['sh', '-c', 'mkdir -p /mlflow-db && chmod 777 /mlflow-db']
        volumeMounts:
        - name: mlflow-database
          mountPath: /mlflow-db
      containers:
      - name: mlflow
        image: ghcr.io/mlflow/mlflow:v2.11.1
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: BACKEND_STORE_URI
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: BACKEND_STORE_URI
        - name: DEFAULT_ARTIFACT_ROOT
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: DEFAULT_ARTIFACT_ROOT
        - name: MLFLOW_S3_ENDPOINT_URL
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: MLFLOW_S3_ENDPOINT_URL
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: AWS_REGION
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: spaces-credentials
              key: access_key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: spaces-credentials
              key: secret_key
        command: ["/bin/sh", "-c"]
        args:
        - |
          mkdir -p /mlflow-db
          mlflow server \
          --host=0.0.0.0 \
          --port=5000 \
          --backend-store-uri=$(BACKEND_STORE_URI) \
          --default-artifact-root=$(DEFAULT_ARTIFACT_ROOT) \
          --serve-artifacts
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "500Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: mlflow-database
          mountPath: /mlflow-db
      volumes:
      - name: mlflow-database
        persistentVolumeClaim:
          claimName: mlflow-database
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  namespace: mlflow
spec:
  selector:
    app: mlflow
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mlflow
  namespace: mlflow
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "1g"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  tls:
  - hosts:
    - ${MLFLOW_DOMAIN}
    secretName: mlflow-tls
  rules:
  - host: ${MLFLOW_DOMAIN}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mlflow
            port:
              number: 80 