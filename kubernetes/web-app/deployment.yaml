apiVersion: apps/v1
kind: Deployment
metadata:
  name: monet-web-app
  namespace: monet-app
  labels:
    app: monet-web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monet-web-app
  template:
    metadata:
      labels:
        app: monet-web-app
    spec:
      containers:
      - name: monet-web-app
        image: ${DOCKER_REGISTRY}/monet-web-app:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 5080
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: spaces-credentials
              key: access_key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: spaces-credentials
              key: secret_key
        - name: AWS_REGION
          value: "${DO_SPACES_REGION}"
        - name: S3_ENDPOINT
          value: "https://${DO_SPACES_REGION}.digitaloceanspaces.com"
        - name: S3_BUCKET
          value: "${DO_SPACES_NAME}"
        - name: PROMOTED_MODEL_NAME
          valueFrom:
            configMapKeyRef:
              name: model-config
              key: promoted_model
              optional: true
        - name: DEFAULT_MODEL_NAME
          value: "photo2monet_cyclegan_mark4.pt"
        - name: MODEL_TO_DOWNLOAD
          value: "photo2monet_cyclegan_mark4.pt"
        - name: UNSPLASH_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: unsplash_api_key
              optional: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "50m"
          limits:
            memory: "1Gi"
            cpu: "200m"
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        livenessProbe:
          httpGet:
            path: /health
            port: 5080
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 5080
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 15
          failureThreshold: 5
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: models-storage
---
apiVersion: v1
kind: Service
metadata:
  name: monet-web-app
  namespace: monet-app
spec:
  selector:
    app: monet-web-app
  ports:
  - port: 80
    targetPort: 5080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monet-web-app
  namespace: monet-app
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ${APP_DOMAIN}
    - www.${APP_DOMAIN}
    secretName: monet-web-app-tls
  rules:
  - host: ${APP_DOMAIN}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: monet-web-app
            port:
              number: 80
  - host: www.${APP_DOMAIN}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: monet-web-app
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: model-config
  namespace: monet-app
data:
  promoted_model: "photo2monet_cyclegan_mark4.pt"
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: monet-app
type: Opaque
data:
  unsplash_api_key: ${UNSPLASH_API_KEY_BASE64} 